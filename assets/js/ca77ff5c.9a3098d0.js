"use strict";(self.webpackChunkhyperdrive=self.webpackChunkhyperdrive||[]).push([[877],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=i,h=c["".concat(d,".").concat(u)]||c[u]||m[u]||o;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8061:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],l={sidebar_position:1,title:"Overview"},d="MultiplatformX",s={unversionedId:"multiplatformx/intro",id:"multiplatformx/intro",isDocsHomePage:!1,title:"Overview",description:"To start using MultiplatformX, find out how to get started.",source:"@site/docs/multiplatformx/intro.md",sourceDirName:"multiplatformx",slug:"/multiplatformx/intro",permalink:"/docs/multiplatformx/intro",editUrl:"https://github.com/Brightify/hyperdrive-kt/edit/main/website/docs/multiplatformx/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Overview"},sidebar:"multiplatformxSidebar",next:{title:"Navigation",permalink:"/docs/multiplatformx/navigation"}},p=[{value:"Delegate properties",id:"delegate-properties",children:[{value:"<code>published</code>",id:"published",children:[]},{value:"<code>collected</code> and <code>collectedFlatMapLatest</code>",id:"collected-and-collectedflatmaplatest",children:[]},{value:"<code>managed</code> and <code>managedList</code>",id:"managed-and-managedlist",children:[]},{value:"<code>binding</code>",id:"binding",children:[]}]},{value:"Annotations",id:"annotations",children:[{value:"<code>@ViewModel</code>",id:"viewmodel",children:[]},{value:"<code>@AutoFactory</code>",id:"autofactory",children:[]},{value:"<code>@NoAutoObserve</code>",id:"noautoobserve",children:[]}]}],m={toc:p};function c(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"multiplatformx"},"MultiplatformX"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Installation")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"To start using ",(0,o.kt)("strong",{parentName:"p"},"MultiplatformX"),", find out how to ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting-started/intro#multiplatformx"},(0,o.kt)("strong",{parentName:"a"},"get started")),"."))),(0,o.kt)("h2",{id:"delegate-properties"},"Delegate properties"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hyperdrive API")," provides property delegates that the ",(0,o.kt)("strong",{parentName:"p"},"Hyperdrive Gradle plugin")," then uses to generate boilerplate IR for you to use. To allow all platforms to correctly update based on view model changes, all mutable values should use one of the provided property delegates."),(0,o.kt)("h3",{id:"published"},(0,o.kt)("inlineCode",{parentName:"h3"},"published")),(0,o.kt)("p",null,"The most basic of the delegates, allows the views to observe changes the view model makes to the property. For view models and lists of view models, instead use ",(0,o.kt)("inlineCode",{parentName:"p"},"managed")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"managedList")," respectively."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"List"),"s and ",(0,o.kt)("inlineCode",{parentName:"p"},"Map"),"s only capture changes on assignment (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"list = newList"),"), so mutating them in any other way is not propagated."))),(0,o.kt)("h3",{id:"collected-and-collectedflatmaplatest"},(0,o.kt)("inlineCode",{parentName:"h3"},"collected")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"collectedFlatMapLatest")),(0,o.kt)("p",null,"Works similarly to ",(0,o.kt)("inlineCode",{parentName:"p"},"published"),", although this one is used for observing an ",(0,o.kt)("inlineCode",{parentName:"p"},"ObservableProperty"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Flow"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"StateFlow")," and mapping the values if needed."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"collectedFlatMapLatest")," variant maps the value into an ",(0,o.kt)("inlineCode",{parentName:"p"},"ObservableProperty")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"StateFlow")," that is then observed."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Properties declared using the property delegates are mappable, this allows for a property depending on another to be observable as well."),(0,o.kt)("p",{parentName:"div"},"Example:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="BedViewModel.kt"',title:'"BedViewModel.kt"'},"@ViewModel\nclass BedViewModel: BaseViewModel() {\n    var monstersNearby by published(0)\n\n    val isSleepAvailable by observeMonstersNearby.map { it.isEmpty }\n}\n")))),(0,o.kt)("h3",{id:"managed-and-managedlist"},(0,o.kt)("inlineCode",{parentName:"h3"},"managed")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"managedList")),(0,o.kt)("p",null,"Due to the way view model hierarchy works in Hyperdrive, it is recommended to use ",(0,o.kt)("inlineCode",{parentName:"p"},"managed")," for a single view model and ",(0,o.kt)("inlineCode",{parentName:"p"},"managedList")," for a list of view models. This automatically ",(0,o.kt)("em",{parentName:"p"},"manages")," them to make sure that they don't perform any unnecessary work when they aren't yet used in the view hierarchy."),(0,o.kt)("p",null,"In case you need a view model to eagerly perform work like observe flows in ",(0,o.kt)("inlineCode",{parentName:"p"},"collected")," and perform code in ",(0,o.kt)("inlineCode",{parentName:"p"},"whileAttached()"),", you may use ",(0,o.kt)("inlineCode",{parentName:"p"},"published")," instead, though that is not recommended unless you're really sure what you're doing."),(0,o.kt)("h3",{id:"binding"},(0,o.kt)("inlineCode",{parentName:"h3"},"binding")),(0,o.kt)("p",null,"Creates a two-way binding where assigning a value to the property assigns the value to the provided ",(0,o.kt)("inlineCode",{parentName:"p"},"MutableStateFlow")," or uses a setter closure. This delegate is appropriate when you want to immediately propagate changes from the view model into the layer above it."),(0,o.kt)("h2",{id:"annotations"},"Annotations"),(0,o.kt)("p",null,"The following annotations are used by the ",(0,o.kt)("strong",{parentName:"p"},"Hyperdrive Gradle plugin")," to generate and modify IR to let you focus on the code and not the surrounding boilerplate."),(0,o.kt)("h3",{id:"viewmodel"},(0,o.kt)("inlineCode",{parentName:"h3"},"@ViewModel")),(0,o.kt)("p",null,"Enables generating ",(0,o.kt)("inlineCode",{parentName:"p"},"observeX")," accessors for all Hyperdrive property delegates within the annotated class."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The annotated class has to inherit from ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"BaseViewModel")),"."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="ContactViewModel.kt"',title:'"ContactViewModel.kt"'},'@ViewModel\nclass ContactViewModel: BaseViewModel() {\n    // `observeName` of type `StateFlow<String>` is generated.\n    var name by published("Samantha")\n    // `observeNumber` of type `StateFlow<String?>` is generated.\n    var number: String? by published(null)\n\n    var overview = combine(observeName, observeNumber) { (name, number) ->\n        "Name: $name" + number?.let { ", number: $it" } ?: ""\n    }\n}\n')),(0,o.kt)("h3",{id:"autofactory"},(0,o.kt)("inlineCode",{parentName:"h3"},"@AutoFactory")),(0,o.kt)("p",null,"Automatic factory generation for the annotated class or constructor."),(0,o.kt)("p",null,"By default, the generated factory class is named ",(0,o.kt)("inlineCode",{parentName:"p"},"Factory")," and its method ",(0,o.kt)("inlineCode",{parentName:"p"},"create"),". This factory method then uses the annotated constructor (or the primary constructor if the class is annotated) to create a new instance of the class while leaving the common dependencies up to the dependency injection."),(0,o.kt)("p",null,"All parameters of the ",(0,o.kt)("inlineCode",{parentName:"p"},"@AutoFactory")," constructor are assumed to be injectable unless annotated ",(0,o.kt)("inlineCode",{parentName:"p"},"@Provided"),"."),(0,o.kt)("p",null,"Usage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="FriendDetailViewModel.kt"',title:'"FriendDetailViewModel.kt"'},"@AutoFactory\nclass FriendDetailViewModel(\n    private val friendGateway: FriendGateway,\n    @Provided\n    id: Friend.Id,\n): BaseViewModel()\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Hyperdrive Gradle plugin")," generates the following equivalent in Kotlin code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"// Inside `FriendDetailViewModel` namespace.\nclass Factory(\n    // All parameters not annotated `@Provided`.\n    private val friendGateway: FriendGateway\n) {\n    // Contains All parameters annotated `@Provided`.\n    fun create(id: Friend.Id) = FriendDetailViewModel(friendGateway, id)\n}\n")),(0,o.kt)("p",null,"This allows you to pass the factory with the injectable dependencies already provided to view models which then just call ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," with only the necessary values (e.g. an ID to fetch more info). An example would look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"dependencyContainer {\n    register {\n        FriendDetailViewModel.Factory(\n            friendGateway = inject(),\n        )\n    }\n    register {\n        FriendListViewModel.Factory(\n            detailFactory = inject(),\n        )\n    }\n}\n")),(0,o.kt)("p",null,"And then ",(0,o.kt)("inlineCode",{parentName:"p"},"FriendListViewModel")," uses the generated factory to instantiate a child view model without the need to pass all the dependencies."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="FriendListViewModel.kt"',title:'"FriendListViewModel.kt"'},"class FriendListViewModel(\n    private val detailFactory: FriendDetailViewModel.Factory,\n): BaseViewModel() {\n    var presentedDetail: FriendDetailViewModel? by managed(null)\n\n    fun openDetail(id: Friend.Id) {\n        presentedDetail = detailFactory.create(id)\n    }\n}\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Annotating multiple constructors or both the class and a constructor is not supported and will produce compilation errors."))),(0,o.kt)("h3",{id:"noautoobserve"},(0,o.kt)("inlineCode",{parentName:"h3"},"@NoAutoObserve")),(0,o.kt)("p",null,"Disables IR modifications on ",(0,o.kt)("inlineCode",{parentName:"p"},"@Composable")," functions that provide automatic ",(0,o.kt)("inlineCode",{parentName:"p"},"ManageableViewModel")," (",(0,o.kt)("inlineCode",{parentName:"p"},"BaseViewModel")," implements this interface) observing. You might want to do this if you feel this imposes a performance hit on a particularly complex ",(0,o.kt)("inlineCode",{parentName:"p"},"@Composable")," function and there's no way of restructuring it into simpler ones."))}c.isMDXComponent=!0}}]);